@model X.PagedList.StaticPagedList<InsightHub.Models.ReportModel>
@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Index</h1>
@if (User.Identity.IsAuthenticated && User.IsInRole("Author") || User.IsInRole("Admin"))
{
    <p>
        <a asp-action="Create">Create New</a>
    </p>
}
<form asp-action="Index" method="get">
    <div class="form-actions no-color">
        <p>
            Search Reports: <input type="text" name="search" value="@ViewData["Search"]" />
            <input type="submit" value="Search" class="btn btn-default" />
            <br />
            @ViewData["ResultsCount"] result(s)
            <br />
            <a asp-action="Index">Back to Full List</a>
        </p>
    </div>
</form>
<table class="table">
    <thead>
        <tr>
            <th />
            <th>
                <a asp-action="Index" asp-route-sort="@ViewData["SortByTitle"]"
                   asp-route-search="@ViewData["Search"]"
                   asp-route-industry="@ViewData["Industry"]"
                   asp-route-tag="@ViewData["Tag"]"
                   asp-route-author="@ViewData["Author"]">Title</a>
            </th>
            <th>
                Summary
            </th>
            <th>
                <a asp-action="Index" asp-route-sort="@ViewData["SortByAuthor"]"
                   asp-route-search="@ViewData["Search"]"
                   asp-route-industry="@ViewData["Industry"]"
                   asp-route-tag="@ViewData["Tag"]"
                   asp-route-author="@ViewData["Author"]">Author</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sort="@ViewData["SortByIndustry"]"
                   asp-route-search="@ViewData["Search"]"
                   asp-route-industry="@ViewData["Industry"]"
                   asp-route-tag="@ViewData["Tag"]"
                   asp-route-author="@ViewData["Author"]">Industry</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sort="@ViewData["SortByDate"]"
                   asp-route-search="@ViewData["Search"]"
                   asp-route-industry="@ViewData["Industry"]"
                   asp-route-tag="@ViewData["Tag"]"
                   asp-route-author="@ViewData["Author"]">CreatedOn</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sort="@ViewData["SortByDownloads"]"
                   asp-route-search="@ViewData["Search"]"
                   asp-route-industry="@ViewData["Industry"]"
                   asp-route-tag="@ViewData["Tag"]"
                   asp-route-author="@ViewData["Author"]">Downloads</a>
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.ImgUrl)
                </td>
                <td>
                    <a asp-action="Details" asp-route-id="@item.Id">@Html.DisplayFor(modelItem => item.Title)</a>
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Summary)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Author)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Industry)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CreatedOn)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DownloadsCount)
                </td>
                <td>
                    @if (User.Identity.IsAuthenticated && User.Identity.Name == item.Author.Split(' ').Last() || User.IsInRole("Admin"))
                    {
                        <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> <br />
                        <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-sort="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageNumber - 1)"
   asp-route-search="@ViewData["Search"]"
   asp-route-industry="@ViewData["Industry"]"
   asp-route-tag="@ViewData["Tag"]"
   asp-route-author="@ViewData["Author"]"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-sort="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageNumber + 1)"
   asp-route-search="@ViewData["Search"]"
   asp-route-industry="@ViewData["Industry"]"
   asp-route-tag="@ViewData["Tag"]"
   asp-route-author="@ViewData["Author"]"
   class="btn btn-default @nextDisabled">
    Next
</a>
